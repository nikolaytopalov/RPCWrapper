/*
	VistA Utilities
	Author: Nikolay Topalov

	Copyright 2014 Nikolay Topalov

	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
*/

var rpcNew = function(pRPCName) {
	var result = {"name" : pRPCName, "input": []};
	return result;
};

var rpcExecute = function(ewd, pRPC) {

	var ewdtemp = new ewd.mumps.GlobalNode('TMP',['ewd',process.pid]); 
	ewdtemp.$('RPC')._delete();
	ewdtemp.$('RPC')._setDocument(pRPC);
	var temp = getNA(ewdtemp._node,"RPC");  // e.g., ^TMP("ewd","3740","RPC")
	
	var str = ewd.mumps.function("rpcExecute^nstRPCWrapper", temp);
	var result = JSON.parse(str);

	if (result.success) {
		result.result = ewdtemp.$('RPC').$('result')._getDocument();
	};
	ewdtemp.$('RPC')._delete();
	
	return result;	
};

var fmFieldExternalValue = function(ewd, pFile, pField, pFlags, pIntValue) {
		//$$EXTERNAL^DILFD(FILE,FIELD,FLAGS,INTERNAL,MSG_ROOT);
		var res = ewd.mumps.function("EXTERNAL^DILFD",pFile,pField,pFlags,pIntValue);

		return res; 
		
	};
	
	// simple $piece implementation
var piece = function(str,delimiter,position) {
		
		if (str === undefined) return "";
		
		var buf = str.split(delimiter);
		
		return (buf[position-1] === undefined) ? "" : buf[position-1]; 
		
	};

// return a global node as a string 	
var getNA = function(globalNode) {  //,'^' + ewd.temp._globalName + '("' + ewd.temp._subscripts.join('","') + '","RPC")'; 
    var globalName = "^" + globalNode.global + "("; 
	
	if (globalNode.subscripts.length > 0) {
		globalName +=  '"' + globalNode.subscripts.join('","') + '"';
	}
	
	if (arguments.length > 1) {
		var args = [];
		for (var i = 1; i < arguments.length; i++) {
			args.push(arguments[i]);
		}
		if (globalNode.subscripts.length > 0) {
			globalName += ',';
		}
		globalName += '"' + args.join('","') + '"';
	};
	
	globalName += ')';
	
	return globalName;   
};

module.exports = {
	rpcExecute: rpcExecute,
	rpcNew: rpcNew,
	getNA: getNA,
	fmFieldExternalValue : fmFieldExternalValue
};